/*==================== RESET STYLES ====================*/
@import 'import/reset.scss';
/*==================== RESET STYLES ====================*/

/*==================== FONTS ====================*/
@import 'fonts.scss';
/*==================== FONTS ====================*/

/*==================== VARIABLES ====================*/
$maxWidthLayout: 1440;
$maxWidthContainer: 1290;
$lumbFont: 'lumberjack', serif;
$roboFont: 'RobotoCondensed', sans-serif;
$whiteColor: #fff;
$pinkColor: #d6258f;
$blackBg: #000;
$blueBg: #020f1c;
/*==================== VARIABLES ====================*/

/*==================== MIXINS ====================*/
// responsive value
@mixin respValue($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  } @else if $type==2 {
    //Только если больше контейнера
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthLayout - 320}));
    }
  } @else {
    //Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthLayout - 320}));
  }
}
// snippet (rv)
// responsive value
/*==================== MIXINS ====================*/

/*==================== BASIC PARAMETERS ====================*/
html {
  scroll-behavior: smooth;
}

body {
  font-family: $lumbFont;
  font-weight: 400;
  line-height: 1.2;
  background: $blackBg;
  color: $whiteColor;

  @media (max-width: 767.98px) {
    &.lock {
      overflow: hidden;
    }
  }
}

.wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  overflow: hidden;
}

.main {
  flex: 1 1 auto;

  .section-class,
  .section-class {
    &:not(:last-child) {
      @include respValue('margin-bottom', 60, 40, 1);
    }
  }

  &:not(:last-child) {
    @include respValue('margin-bottom', 60, 40, 1);
  }
}
/*==================== BASIC PARAMETERS ====================*/

/*==================== REPEAT BLOCK ====================*/
//! Container
[class*='__container'] {
  width: 100%;
  max-width: $maxWidthContainer + px;
  padding: 0 15px;
  margin: 0 auto;
}

//! Responsive Image
.ibg {
  position: relative;

  img {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    object-fit: cover;
  }
}

//! Title
.title-l {
}

.title-m {
  font-size: 64px;
  text-transform: uppercase;
  text-align: center;
  color: $pinkColor;

  -webkit-text-stroke-width: 2px;
  -webkit-text-stroke-color: #fff;
  text-shadow: 0 0 1px #fff, 0 0 2px #fff, 0 0 5px #fff, 0 0 11px $pinkColor, 0 0 20px $pinkColor, 0 0 30px $pinkColor,
    0 0 55px $pinkColor, 0 0 80px $pinkColor;
  animation: flicker 1.5s infinite alternate;

  @media (max-width: 767.98px) {
    font-size: 36px;
    -webkit-text-stroke-width: 1px;
  }
}

@keyframes flicker {
  100% {
    text-shadow: 0 0 2px #fff, 0 0 4px #fff, 0 0 8px #fff, 0 0 15px $pinkColor, 0 0 30px $pinkColor, 0 0 40px $pinkColor,
      0 0 70px $pinkColor, 0 0 100px $pinkColor;
  }
  0% {
    text-shadow: 0 0 1px #fff, 0 0 2px #fff, 0 0 5px #fff, 0 0 11px $pinkColor, 0 0 20px $pinkColor, 0 0 30px $pinkColor,
      0 0 55px $pinkColor, 0 0 80px $pinkColor;
  }
}

.title-s {
}
/*==================== REPEAT BLOCK ====================*/
